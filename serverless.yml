service: Jobfinderrz

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  region: 'us-east-1'
  memorySize: 256
  timeout: 600
  iam:
    role: arn:aws:iam::693609258176:role/JobFinderrz_Role
  environment:
    DEBUG: ${env:DEBUG}

functions:
  mainfunction:
    handler: server/handler.handler
    events:
      - httpApi:
          method: GET
          path: /findjob
  scrape:
    handler: server/scraper/scraper.handler
    events:
      - httpApi:
          method: GET
          path: /scrape




resources:
  Resources:
    DataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: JobsTable
        AttributeDefinitions:
          - AttributeName: description
            AttributeType: S
          - AttributeName: company
            AttributeType: S
        KeySchema:
          - AttributeName: description
            KeyType: HASH
          - AttributeName: company
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    ClientBucketResource:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: Jobfinderrz-Website 
    ClientBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: Jobfinderrz-Website
        PolicyDocument:
          Statement:
            - Sid: OAIGetObject
              Effect: Allow
              Principal:
                AWS:
                  Fn::Join:
                    - " "
                    - - arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                      - Ref: S3OriginAccessIdentity
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: ClientBucketResource
                    - "/*"
    S3OriginAccessIdentity:
      Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: Serverless managed web app S3 bucket origin-access-identity

plugins:
  - serverless-plugin-typescript
  - serverless-offline
